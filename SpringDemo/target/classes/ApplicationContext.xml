<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="food" class="com.lvjing.entity.Food">
        <property name="name" value="香蕉"/>
        <property name="taste" value="甜甜的"/>
        <property name="kind" value="水果"/>
    </bean>

    <!--配置目标类-->
    <bean id="productDao" class="com.lvjing.demo1.ProductDaoImpl"/>

    <!--配置前置通知类-->
    <bean id="myProxyBefore" class="com.lvjing.demo1.MyProxyBefore"/>

    <!--Spring的AOP产生的代理对象-->
    <bean id="proxyProduct" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--配置目标类-->
        <property name="target" ref="productDao"/>
        <!--实现的接口-->
        <property name="proxyInterfaces" value="com.lvjing.demo1.ProductDao"/>
        <!--采用拦截的名称-->
        <property name="interceptorNames" value="myProxyBefore"/>
    </bean>


    <!--带有切入点的切面-->
    <!--配置目标类-->
    <bean id="book" class="com.lvjing.AdviceWithPointCut.Book"/>
    <!--配置通知-->
    <bean id="roundIntercept" class="com.lvjing.AdviceWithPointCut.MyRoundIntercept"/>
    <!--一般的切面使用通知作为切面；要对目标类的某个方法进行增强就需要配置一个带有切入点的切面-->
    <bean id="myAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <!--pattern中配置正则表达式：.任意字符；*任意次数-->
        <property name="pattern" value=".*addBook.*"/>
        <property name="advice" ref="roundIntercept"/>
    </bean>
    <!--配置产生代理-->
    <bean id="bookProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="book"/>
        <property name="proxyTargetClass" value="true"/>
        <property name="interceptorNames" value="myAdvisor"/>
    </bean>
</beans>